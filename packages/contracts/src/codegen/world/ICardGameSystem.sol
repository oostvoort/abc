// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

import { HeroCardData } from "./../tables/HeroCard.sol";
import { ItemCardData } from "./../tables/ItemCard.sol";

interface ICardGameSystem {
  error NOT_REGISTERED_PLAYER();
  error CARD_UNKNOWN();
  error NO_CARDS();
  error CARD_NOT_OWNER();
  error PLAYER_ALREADY_IN_DUEL();
  error DUEL_ROOM_FULL();
  error CANNOT_LEAVE_WHILE_READY();
  error DUEL_ONGOING();
  error DUEL_PREPARE_DEADLINE();
  error DUEL_PLAYER_NOT_READY();
  error NOT_IN_DUEL();
  error DUEL_NOT_READY();

  function registerPlayer() external;

  function resetDeck() external;

  function configHeroCard(string memory name, string memory image, HeroCardData memory data) external returns (bytes32);

  function configItemCard(string memory name, string memory image, ItemCardData memory data) external returns (bytes32);

  function openPack(bytes32 pack) external returns (bytes32[] memory);

  function placeToDeck(bytes32 playerCardEntity, uint8 order) external;

  function saveDeck(bytes32[12] memory cards) external;

  function clearDeckSlot(uint8 order) external;

  function createDuel() external returns (bytes32);

  function joinDuel(bytes32 duelEntity) external;

  function leaveDuel() external;

  function toggleReady() external;

  function startDuel() external;

  function setRoundWinner(int8 winner) external;

  function placeToTeam(uint8 fromDeck, uint8 toTeam) external;

  function getRoundLogs(bytes32 duelEntity) external view returns (bytes[] memory);
}
